version: '3.9'

services:
  nginx:
    build: ./requirements/nginx/
    image: nginx:mine
    restart: on-failure
    ports:
      - 443:443
    volumes:
      - wp:/var/www/html/
    networks:
      - docker_network
    depends_on:
      - wordpress

  wordpress:
    build: 
      context: ./requirements/wordpress/
      args:
        - DATABASE_NAME=${DATABASE_NAME}
        - DATABASE_USER_NAME=${DATABASE_USER_NAME}
        - DATABASE_USER_PASS=${DATABASE_USER_PASS}
        - DATABASE_HOST=${DATABASE_HOST}
    image: wordpress:mine
    restart: on-failure
    env_file:
      - .env
    expose:
      - 9000
    volumes:
      - wp:/var/www/html/
    networks:
      - docker_network
    depends_on:
      - mariadb
      - redis
      - ftp

  mariadb:
    build: 
      context: ./requirements/mariadb/
      args:
        - DATABASE_NAME=${DATABASE_NAME}
        - DATABASE_USER_NAME=${DATABASE_USER_NAME}
        - DATABASE_USER_PASS=${DATABASE_USER_PASS}
    image: mariadb:mine
    restart: on-failure
    env_file:
      - .env
    expose:
      - 3306
    volumes:
      - db:/var/lib/mysql/
    networks:
      - docker_network

  redis:
    build: ./requirements/bonus/redis/
    image: redis:mine
    restart: on-failure
    expose:
     - 6379
    networks:
      - docker_network
  
  ftp:
    build: 
      context: ./requirements/bonus/ftp
      args:
        - FTP_NAME=${FTP_NAME}
        - FTP_PASS=${FTP_PASS}
    image: ftp:mine
    restart: on-failure
    env_file:
      - .env
    expose:
      - 20
    volumes:
      - wp:/var/www/html/
    networks:
      - docker_network

volumes:
  wp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USER}/data/wp
  db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/${USER}/data/db

networks:
  docker_network: